[{"C:\\Users\\Admin\\react\\myapp\\src\\index.js":"1","C:\\Users\\Admin\\react\\myapp\\src\\Ecom\\Signup.js":"2","C:\\Users\\Admin\\react\\myapp\\src\\Ecom\\Signin.js":"3","C:\\Users\\Admin\\react\\myapp\\src\\Ecom\\Ecomrout.js":"4","C:\\Users\\Admin\\react\\myapp\\src\\Ecom\\Ecomdata.js":"5","C:\\Users\\Admin\\react\\myapp\\src\\Ecom\\Addcart.js":"6","C:\\Users\\Admin\\react\\myapp\\src\\Ecom\\datadetail.js":"7","C:\\Users\\Admin\\react\\myapp\\src\\Ecom\\Pagination.js":"8","C:\\Users\\Admin\\react\\myapp\\src\\Ecom\\user.js":"9"},{"size":1904,"mtime":1703140931406,"results":"10","hashOfConfig":"11"},{"size":3806,"mtime":1701531327216,"results":"12","hashOfConfig":"11"},{"size":2750,"mtime":1701531339265,"results":"13","hashOfConfig":"11"},{"size":898,"mtime":1703143207963,"results":"14","hashOfConfig":"11"},{"size":6659,"mtime":1703180022695,"results":"15","hashOfConfig":"11"},{"size":3008,"mtime":1703179982536,"results":"16","hashOfConfig":"11"},{"size":1073,"mtime":1703179929738,"results":"17","hashOfConfig":"11"},{"size":1056,"mtime":1701852337529,"results":"18","hashOfConfig":"11"},{"size":852,"mtime":1701878576361,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","suppressedMessages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"zst41e",{"filePath":"23","messages":"24","suppressedMessages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26","usedDeprecatedRules":"27"},{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"27"},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38"},{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42"},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46"},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"27"},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"27"},"C:\\Users\\Admin\\react\\myapp\\src\\index.js",[],[],"C:\\Users\\Admin\\react\\myapp\\src\\Ecom\\Signup.js",["55","56","57"],[],"\r\nimport \"./ecom.css\"\r\nimport { useState } from \"react\"\r\nimport { initializeApp } from \"firebase/app\";\r\nimport { createUserWithEmailAndPassword, getAuth } from \"firebase/auth\";\r\nimport {  useNavigate,Link } from \"react-router-dom\";\r\n\r\n\r\nfunction Signup(){\r\n\r\n    const [name, setName] = useState(\"\")\r\n    const [email, setEmail] = useState(\"\")\r\n    const [pswd, setPswd] = useState(\"\")\r\n    const [cpswd, setCpswd] = useState(\"\")\r\n    const [data, setData] = useState(\"\")\r\n    const [data1, setData1] = useState(\"\")\r\n\r\n     const navigate=useNavigate()\r\n\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyB1GSHHUaBsfn9PtIiss8ihDb8N85hEzC4\",\r\n  authDomain: \"ecomauth-d68fc.firebaseapp.com\",\r\n  projectId: \"ecomauth-d68fc\",\r\n  storageBucket: \"ecomauth-d68fc.appspot.com\",\r\n  messagingSenderId: \"890678004532\",\r\n  appId: \"1:890678004532:web:4a4100efde195de020b361\",\r\n  measurementId: \"G-DPG875096K\"\r\n};\r\n\r\n// Initialize Firebase\r\nconst app = initializeApp(firebaseConfig);\r\nconst auth=getAuth()//email and password\r\n\r\nconst regu =()=>{\r\n    if (pswd != cpswd) {\r\n        setData(\"password does not match...\")\r\n    }\r\n    else{\r\n        setData(\"\")\r\n    }\r\n    \r\n}\r\n\r\n\r\nconst SubmitData=(event)=>{\r\n    event.preventDefault()\r\nregu()\r\n    const pattern=/^[a-z]+[0-9]+[\\!@#$%^&*]$/\r\n\r\n    if(pattern.test(pswd)) {\r\n\r\n          setData1(\"\")\r\n          \r\n    let obj={\r\n        email:email,\r\n        password:pswd\r\n    }\r\n    createUserWithEmailAndPassword(auth, obj.email, obj.password)\r\n    .then(() => {\r\n        alert(\"successfully register...\")\r\n        navigate(\"./Signin\")\r\n    \r\n    })\r\n    .catch(() => {\r\n        alert(\"error...\")\r\n    })\r\n}\r\nelse{\r\n    setData1(\"create strong password...\")\r\n}\r\n\r\n}\r\n\r\n    return(\r\n        <div className=\"container my-3 \" style={{ width: \"380px\" }}>\r\n        <div className=\"card p-4\">\r\n            <div className=\"card-title\">\r\n                <h3 className=\"text-center\">Create account</h3>\r\n            </div>\r\n\r\n            <div card-body>\r\n                <form onSubmit={SubmitData}>  \r\n\r\n                        <label class=\"form-label\">Name</label>\r\n                        <input value={name} type=\"text\" onChange={e=>setName(e.target.value)} required class=\"form-control\" id=\"exampleInputEmail1\" aria-describedby=\"emailHelp\" />\r\n                        <br/>\r\n                    \r\n                        <label class=\"form-label\">Email </label>\r\n                        <input value={email} type=\"email\"  onChange={e=>setEmail(e.target.value)} required class=\"form-control\" id=\"exampleInputEmail1\" aria-describedby=\"emailHelp\" />\r\n                        <br/>\r\n\r\n                        <label class=\"form-label\">Password</label>\r\n                        <input value={pswd} type=\"password\"  onChange={e=>setPswd(e.target.value)} required class=\"form-control\" id=\"exampleInputEmail1\" aria-describedby=\"emailHelp\" />\r\n                        <span id=\"pswd\" style={{color:\"red\"}}>{data1}</span>\r\n                        <br/>\r\n                      \r\n                        <label class=\"form-label\">Confirm Password</label>\r\n                        <input value={cpswd} type=\"password\"  onChange={e=>setCpswd(e.target.value)} required class=\"form-control\" id=\"exampleInputPassword1\" aria-describedby=\"emailHelp\" />\r\n                        <span id=\"pswd\" style={{color:\"red\"}}>{data}</span>\r\n                       <br/>\r\n                    <button type=\"submit \" class=\"btn btn-primary\">Signup</button>\r\n\r\n                </form>\r\n\r\n                <div>\r\n                    <p className=\"para\">if you have already account\r\n                        <Link to='/Signin' id=\"link\"> Login</Link> here\r\n                    </p>\r\n                </div>\r\n\r\n\r\n            </div>\r\n\r\n\r\n        </div>\r\n\r\n\r\n    </div>\r\n\r\n\r\n        \r\n    )\r\n}\r\nexport default Signup;",["58","59","60","61","62","63"],"C:\\Users\\Admin\\react\\myapp\\src\\Ecom\\Signin.js",["64"],[],"\r\nimport \"./ecom.css\"\r\nimport { useState } from \"react\";\r\nimport { initializeApp } from \"firebase/app\";\r\nimport { signInWithEmailAndPassword, getAuth } from \"firebase/auth\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\n\r\nfunction Signin(){\r\n\r\n    const [email, setEmail] = useState(\"\")\r\n    const [pswd, setPswd] = useState(\"\")\r\n    const navigate=useNavigate()\r\n\r\n\r\n    const firebaseConfig = {\r\n        apiKey: \"AIzaSyB1GSHHUaBsfn9PtIiss8ihDb8N85hEzC4\",\r\n        authDomain: \"ecomauth-d68fc.firebaseapp.com\",\r\n        projectId: \"ecomauth-d68fc\",\r\n        storageBucket: \"ecomauth-d68fc.appspot.com\",\r\n        messagingSenderId: \"890678004532\",\r\n        appId: \"1:890678004532:web:4a4100efde195de020b361\",\r\n        measurementId: \"G-DPG875096K\"\r\n      };\r\n    const app = initializeApp(firebaseConfig);\r\n    const auth = getAuth()\r\n\r\n\r\n    const SubmitData=(event) => {\r\n        event.preventDefault()\r\n\r\n\r\n\r\n        let obj = {\r\n            email: email,\r\n            password: pswd\r\n        }\r\n        signInWithEmailAndPassword(auth, obj.email, obj.password)\r\n\r\n            .then(() => {\r\n                alert(\"successfully Login...\")\r\n                navigate(\"/Ecomdata\")\r\n            })\r\n            .catch(() => {\r\n            alert(\"error\")\r\n            })\r\n    }\r\n\r\n\r\n    return(\r\n        <div className=\"container my-5\" style={{ width: \"400px\" }}>\r\n        <div className=\"card p-4\">\r\n            <div className=\"card-title\">\r\n                <h3 className=\"text-center\">Login</h3>\r\n            </div>\r\n\r\n            <div card-body>\r\n                <form onSubmit={SubmitData}>  \r\n\r\n                   \r\n                        <label class=\"form-label\">Email </label>\r\n                        <input value={email} type=\"email\" onChange={e => setEmail(e.target.value)} required class=\"form-control\" id=\"exampleInputEmail1\" aria-describedby=\"emailHelp\" />\r\n                        {/* <span id=\"\"></span> */}\r\n                        <br/>\r\n                   \r\n                        <label class=\"form-label\">Password</label>\r\n                        <input value={pswd} type=\"password\" onChange={e => setPswd(e.target.value)} required class=\"form-control\" id=\"exampleInputEmail1\" aria-describedby=\"emailHelp\" />\r\n                        {/* <span id=\"ps\"></span> */}\r\n                        <br/>\r\n                    <button type=\"submit\" class=\"btn btn-primary\">Login</button>\r\n\r\n                </form>\r\n                <div>\r\n                    <p className=\"para\">if you don't have a account \r\n                        <Link to='/' id=\"link\">  Register</Link>   here\r\n                    </p>\r\n                </div>\r\n\r\n\r\n            </div>\r\n\r\n\r\n        </div>\r\n\r\n\r\n\r\n\r\n\r\n    </div>\r\n    )\r\n}\r\nexport default Signin;","C:\\Users\\Admin\\react\\myapp\\src\\Ecom\\Ecomrout.js",[],[],"C:\\Users\\Admin\\react\\myapp\\src\\Ecom\\Ecomdata.js",["65","66","67"],[],"\r\nimport { initializeApp } from \"firebase/app\";\r\nimport { getAuth, signOut } from \"firebase/auth\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport Pagination from \"./Pagination\";\r\nimport UserAuth from \"./user\";\r\n\r\n\r\n// import Detail from \"./datadetail\";\r\n\r\nfunction Ecomdata() {\r\n    const navigate = useNavigate()\r\n    let currentUser = UserAuth()\r\n\r\n\r\n    // signOut\r\n\r\n    const firebaseConfig = {\r\n        apiKey: \"AIzaSyB1GSHHUaBsfn9PtIiss8ihDb8N85hEzC4\",\r\n        authDomain: \"ecomauth-d68fc.firebaseapp.com\",\r\n        projectId: \"ecomauth-d68fc\",\r\n        storageBucket: \"ecomauth-d68fc.appspot.com\",\r\n        messagingSenderId: \"890678004532\",\r\n        appId: \"1:890678004532:web:4a4100efde195de020b361\",\r\n        measurementId: \"G-DPG875096K\"\r\n    };\r\n    const app = initializeApp(firebaseConfig);\r\n    const auth = getAuth()\r\n\r\n\r\n    const SubmitData = (event) => {\r\n        event.preventDefault()\r\n\r\n        signOut(auth)\r\n\r\n            .then(() => {\r\n                alert(\"successfully Logout...\")\r\n                navigate(\"/Signin\")\r\n            })\r\n    }\r\n\r\n\r\n    // ecomdata \r\n\r\n    const [data, setData] = useState([])\r\n\r\n    useEffect(() => {\r\n\r\n        fetch(\"https://ecommerce-app-api-xias.onrender.com/E-commerce\")\r\n            .then((res) => {\r\n                return res.json()\r\n            })\r\n            .then((resp) => {\r\n                console.log(resp)\r\n\r\n                setData(resp)\r\n            })\r\n    }, [])\r\n\r\n    // search \r\n\r\n    const [value, setValue] = useState(\"\")\r\n    const change = (e) => {\r\n        setValue(e.target.value)\r\n    }\r\n\r\n    // async-await \r\n\r\n    const search = async (event) => {\r\n        event.preventDefault()\r\n        return await axios.get(`https://ecommerce-app-api-xias.onrender.com/E-commerce?q=${value}`)\r\n\r\n            .then((res) => {\r\n                setData(res.data)\r\n                setValue(\"\")\r\n\r\n            })\r\n            .catch(() => {\r\n                alert(\"error\")\r\n            })\r\n    }\r\n\r\n    // sort \r\n\r\n    const option = [\"brand\", \"price\"]\r\n    const [sort, setSort] = useState(\"\")\r\n\r\n    const sorting = async (e) => {\r\n\r\n        e.preventDefault()\r\n        let value = e.target.value\r\n        setSort(value)\r\n\r\n        return await axios.get(`https://ecommerce-app-api-xias.onrender.com/E-commerce?_sort=${value}&_order=asc`)\r\n\r\n            .then((res) => {\r\n                setData(res.data)\r\n\r\n            })\r\n            .catch(() => {\r\n                alert(\"error\")                                             \r\n            })\r\n\r\n    }\r\n\r\n    // add-cart\r\n\r\n    const Addcart = (id) => {\r\n\r\n        fetch(\"https://ecommerce-app-api-xias.onrender.com/E-commerce/\" + id)\r\n            .then((res) => {\r\n                return res.json()\r\n\r\n            })\r\n\r\n            .then((resp) => {\r\n                // console.log(resp)\r\n                fetch(\"https://ecommerce-app-api-xias.onrender.com/Add-cart\", {\r\n                    method: \"POST\",\r\n                    headers: { \"Content-type\": \"application/json\" },\r\n                    body: JSON.stringify(resp)\r\n                })\r\n                    .then((resp) => {\r\n                        // console.log(resp)\r\n\r\n                    })\r\n                    .catch(() => {\r\n                        alert(\"error\")\r\n                    })\r\n            })\r\n    }\r\n\r\n    // addcart count \r\n\r\n    const [count, setCount] = useState(0)\r\n    useEffect(() => {\r\n        fetch(\"https://ecommerce-app-api-xias.onrender.com/Add-cart\")\r\n\r\n            .then((res) => {\r\n                return res.json()\r\n            })\r\n\r\n            .then((resp) => {\r\n                setCount(resp)\r\n\r\n\r\n            })\r\n    })\r\n//  deatials \r\n\r\nconst details=(id)=>{\r\nnavigate(\"/datadetail/\"+id)\r\n}\r\n\r\n\r\n    // Pagination\r\n\r\n    const [page, setPage] = useState(1)\r\n    const [records, setRecords] = useState(10)\r\n    let lr = page * records\r\n    let fr = lr - records\r\n\r\n    let mydata = data.slice(fr, lr)\r\n\r\n    const updatePage = (n) => {\r\n        setPage(n)\r\n    }\r\n    const Next = () => {\r\n        setPage(page + 1)\r\n    }\r\n\r\n    const Prev = () => {\r\n        setPage(page - 1)\r\n    }\r\n    return (\r\n\r\n        <div className=\"container-fluid\">\r\n\r\n            <div className=\"nav\">\r\n                <div>\r\n                <h6 id=\"userauth\"><i class=\"fa-solid fa-user\"></i> {currentUser?.email}</h6>\r\n                </div>\r\n                <div className=\"sort\">\r\n                    <select value={sort} onChange={sorting} >\r\n                        <option>sort</option>\r\n                        {option.map((item) => (\r\n                            <option>{item}</option>\r\n                        ))}\r\n\r\n                    </select>\r\n                </div>\r\n\r\n                <div className=\"addcart\">\r\n                    <Link to='/Addcart' className=\"link\">\r\n                        <i class=\"fa-solid fa-cart-shopping\" ></i> <span >{count.length}</span>\r\n                    </Link>\r\n                </div>\r\n\r\n                <div>\r\n                    <form onSubmit={SubmitData}>\r\n                        <div className=\"logout\">\r\n\r\n                            <button type=\"submit\" className=\"btn btn-danger\" ><i class=\"fa-regular fa-user\"></i></button>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n\r\n                <div>\r\n                    <form onSubmit={search}>\r\n                        <div className=\"search\">\r\n                            <input value={value} type=\"text\" placeholder=\"Search for Products,Brand and more\" className=\"form-control\" onChange={change} aria-describedby=\"emailHelp\" />\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n\r\n            </div>\r\n            <div className=\"ecomdata\">\r\n\r\n                {mydata.map((item) => (\r\n                    <div id=\"data\">\r\n\r\n                        <p><img src={item.image} id=\"img\" /> </p>\r\n                        <h4>{item.brand}</h4>\r\n                        <p>{item.name}</p>\r\n                        <h6><i class=\"fa-solid fa-indian-rupee-sign\"></i> {item.price}</h6>\r\n                        <button id=\"addcartbtn\" onClick={() => { Addcart(item.id) }} >Add-cart</button>\r\n                    \r\n                            <button id=\"detailsbtn\" onClick={() => { details(item.id) }}>Details</button>\r\n                    \r\n                    </div>\r\n\r\n                ))}\r\n\r\n            </div>\r\n\r\n            < Pagination total={data.length} record={records} update={updatePage} Next={Next} Prev={Prev} />\r\n\r\n\r\n        </div>\r\n\r\n\r\n    )\r\n\r\n}\r\nexport default Ecomdata;","C:\\Users\\Admin\\react\\myapp\\src\\Ecom\\Addcart.js",["68","69"],[],"import { useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\n\r\n\r\nfunction Addcart() {\r\n\r\n    const [data, setData] = useState([])\r\n\r\n    useEffect(() => {\r\n        fetch(\"https://ecommerce-app-api-xias.onrender.com/Add-cart\")\r\n\r\n            .then((res) => {\r\n                return res.json()\r\n            })\r\n\r\n            .then((resp) => {\r\n                setData(resp)\r\n                // console.log()\r\n\r\n            })\r\n\r\n    }, [])\r\n\r\n    // remove \r\n\r\n\r\n    const deleted = (id) => {\r\n\r\n        fetch(\"https://ecommerce-app-api-xias.onrender.com/Add-cart/\" + id, {\r\n            method: \"DELETE\"\r\n        })\r\n            .then(() => {\r\n                window.location.reload()\r\n            })\r\n            .catch(() => {\r\n                alert(\"error\")\r\n            })\r\n    }\r\n\r\n    // total price \r\n\r\nconst [total,setTotal]=useState(0)\r\nuseEffect(()=>{\r\n\r\n    const initial=0\r\n    const total=data.reduce((sum,current)=> sum + parseFloat(current.price)  ,initial)\r\n    setTotal(total)\r\n\r\n})\r\n\r\n    return (\r\n        <div className=\"container-fluid\">\r\n\r\n            <div className=\"head\">\r\n\r\n                <Link to='/Ecomdata' >\r\n                    <i class=\"fa-solid fa-arrow-left-long\"></i>\r\n\r\n                </Link>\r\n                <h6 style={{ marginLeft: \"100px\" }}>Add-Cart</h6>\r\n\r\n                <Link style={{ marginLeft: \"5px\" }} id=\"link\">\r\n                    <i class=\"fa-solid fa-cart-shopping\" ></i> <span >{data.length}</span>\r\n                </Link>\r\n\r\n            </div>\r\n\r\n\r\n\r\n            <div className=\"addcartdata\">\r\n                {data.map((item) => (\r\n                    <div id=\"cartdata\">\r\n                        <div className=\"datas\">\r\n\r\n                            <div id=\"cartimage\">\r\n                                <p><img src={item.image}  /> </p>\r\n                                <p style={{ color: \"darkgreen\" }}>FREE Delivery</p>\r\n                            </div>\r\n\r\n                            <div className=\"left\">\r\n                                <h4>{item.brand}</h4>\r\n                                <p>{item.name}</p>\r\n                                <h6><i class=\"fa-solid fa-indian-rupee-sign\"></i> {item.price}</h6>\r\n                                <p>Delivery in 2 Days</p>\r\n\r\n                            </div>\r\n                        </div>\r\n                        <hr />\r\n                        <div className=\"cartbtn\">\r\n                            <button onClick={() => { deleted(item.id) }} id=\"remove\">Remove</button>\r\n                            <button id=\"buybtn\">Buy now</button>\r\n                        </div>\r\n                    </div>\r\n                ))}\r\n            </div>\r\n\r\n            <div className=\"totalprice\">\r\n                <div id=\"price\">\r\n                <p>price<span>({data.length} items)</span> = {total}</p>\r\n                <p>Total<span id=\"total\"> = {total}</span></p>\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n\r\n    )\r\n}\r\nexport default Addcart;\r\n","C:\\Users\\Admin\\react\\myapp\\src\\Ecom\\datadetail.js",["70","71","72"],[],"import { useEffect, useState } from \"react\";\r\nimport { Link, useParams } from \"react-router-dom\";\r\n\r\n\r\nfunction Detail() {\r\n    \r\nconst {id}=useParams()\r\n    const [data, setData] = useState()\r\n\r\n    useEffect(() => {\r\n        fetch(\"https://ecommerce-app-api-xias.onrender.com/E-commerce/\" + id)\r\n            .then((res) => {\r\n                return res.json()\r\n            })\r\n\r\n            .then((resp) => {\r\n                setData(resp)\r\n                // console.log(resp)\r\n            })\r\n    }, [])\r\n\r\n    return (\r\n\r\n    \r\n             <div >\r\n\r\n{data &&\r\n    <div class=\"details\">\r\n\r\n        <p><img src={data.image} id=\"im\" /> </p>\r\n        <div id=\"dlist\">\r\n        <h4>{data.brand}</h4>\r\n        <p>{data.name}</p>\r\n        <h6>Price: <i class=\"fa-solid fa-indian-rupee-sign\"></i> {data.price}</h6>\r\n        <p>Material: {data.material}</p>\r\n        <p>Color: {data.color}</p>\r\n        </div> \r\n        <div id=\"highlight\">\r\n        <p>Highlights: {data.highlights}</p>\r\n        </div>\r\n       \r\n    </div>\r\n\r\n}\r\n\r\n</div>\r\n\r\n\r\n    )\r\n}\r\nexport default Detail;","C:\\Users\\Admin\\react\\myapp\\src\\Ecom\\Pagination.js",["73","74","75"],[],"\r\n\r\n\r\n\r\nfunction Pagination({ total, record, update, Next, Prev }) {\r\n\r\n    let n = Math.ceil(total / record)\r\n\r\n    let page = []\r\n\r\n    for (let i = 1; i <= n; i++) {\r\n        page.push(i)\r\n    }\r\n    return (\r\n\r\n        <div>\r\n            <ul className=\"pagination\">\r\n                <li className=\"page-item\">\r\n                    <a href=\"#\" className=\"page-link\" onClick={Prev}>\r\n                        <i class=\"fa-solid fa-arrow-left\"></i> Prev\r\n                    </a>\r\n                </li>\r\n\r\n                {page.map((item) => (\r\n                    <li className=\"page-item\">\r\n                        <a href=\"#\" className=\"page-link\" onClick={() => { update(item) }}>{item}</a>\r\n                    </li>\r\n                ))}\r\n                <li className=\"page-item\">\r\n                    <a href=\"#\" className=\"page-link\" onClick={Next}>\r\n                      Next  <i class=\"fa-solid fa-arrow-right\"></i>\r\n                    </a>\r\n                </li>\r\n\r\n            </ul>\r\n\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\nexport default Pagination;","C:\\Users\\Admin\\react\\myapp\\src\\Ecom\\user.js",["76"],[],"\r\n\r\nimport { initializeApp } from \"firebase/app\";\r\nimport { getAuth, onAuthStateChanged } from \"firebase/auth\";\r\nimport { useEffect, useState } from \"react\";\r\n\r\n\r\n    const firebaseConfig = {\r\n        apiKey: \"AIzaSyB1GSHHUaBsfn9PtIiss8ihDb8N85hEzC4\",\r\n        authDomain: \"ecomauth-d68fc.firebaseapp.com\",\r\n        projectId: \"ecomauth-d68fc\",\r\n        storageBucket: \"ecomauth-d68fc.appspot.com\",\r\n        messagingSenderId: \"890678004532\",\r\n        appId: \"1:890678004532:web:4a4100efde195de020b361\",\r\n        measurementId: \"G-DPG875096K\"\r\n      };\r\n    const app = initializeApp(firebaseConfig);\r\n    const auth = getAuth()\r\n\r\n    function UserAuth(){\r\n   const [user,setUser]=useState()\r\n\r\n   useEffect(()=>{\r\n\r\n\r\n   let a= onAuthStateChanged(auth,user=>setUser(user))\r\n    return a\r\n\r\n\r\n   },[])\r\nreturn user\r\n    }\r\n    export default UserAuth;",{"ruleId":"77","severity":1,"message":"78","line":32,"column":7,"nodeType":"79","messageId":"80","endLine":32,"endColumn":10},{"ruleId":"81","severity":1,"message":"82","line":36,"column":14,"nodeType":"83","messageId":"84","endLine":36,"endColumn":16},{"ruleId":"85","severity":1,"message":"86","line":49,"column":34,"nodeType":"87","messageId":"88","endLine":49,"endColumn":35,"suggestions":"89"},{"ruleId":"90","replacedBy":"91"},{"ruleId":"92","replacedBy":"93"},{"ruleId":"94","replacedBy":"95"},{"ruleId":"96","replacedBy":"97"},{"ruleId":"98","replacedBy":"99"},{"ruleId":"100","replacedBy":"101"},{"ruleId":"77","severity":1,"message":"78","line":24,"column":11,"nodeType":"79","messageId":"80","endLine":24,"endColumn":14},{"ruleId":"77","severity":1,"message":"78","line":29,"column":11,"nodeType":"79","messageId":"80","endLine":29,"endColumn":14},{"ruleId":"77","severity":1,"message":"102","line":161,"column":21,"nodeType":"79","messageId":"80","endLine":161,"endColumn":31},{"ruleId":"103","severity":1,"message":"104","line":224,"column":28,"nodeType":"105","endLine":224,"endColumn":61},{"ruleId":"106","severity":1,"message":"107","line":44,"column":1,"nodeType":"79","endLine":44,"endColumn":10,"suggestions":"108"},{"ruleId":"103","severity":1,"message":"104","line":77,"column":36,"nodeType":"105","endLine":77,"endColumn":61},{"ruleId":"77","severity":1,"message":"109","line":2,"column":10,"nodeType":"79","messageId":"80","endLine":2,"endColumn":14},{"ruleId":"106","severity":1,"message":"110","line":20,"column":8,"nodeType":"111","endLine":20,"endColumn":10,"suggestions":"112"},{"ruleId":"103","severity":1,"message":"104","line":30,"column":12,"nodeType":"105","endLine":30,"endColumn":44},{"ruleId":"113","severity":1,"message":"114","line":19,"column":21,"nodeType":"105","endLine":19,"endColumn":70},{"ruleId":"113","severity":1,"message":"114","line":26,"column":25,"nodeType":"105","endLine":26,"endColumn":92},{"ruleId":"113","severity":1,"message":"114","line":30,"column":21,"nodeType":"105","endLine":30,"endColumn":70},{"ruleId":"77","severity":1,"message":"78","line":17,"column":11,"nodeType":"79","messageId":"80","endLine":17,"endColumn":14},"no-unused-vars","'app' is assigned a value but never used.","Identifier","unusedVar","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","no-useless-escape","Unnecessary escape character: \\!.","Literal","unnecessaryEscape",["115","116"],"dot-location",[],"new-parens",[],"no-mixed-operators",[],"no-new-object",["117"],"no-whitespace-before-property",[],"rest-spread-spacing",[],"'setRecords' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","react-hooks/exhaustive-deps","React Hook useEffect contains a call to 'setTotal'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [data] as a second argument to the useEffect Hook.",["118"],"'Link' is defined but never used.","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.","ArrayExpression",["119"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md",{"messageId":"120","fix":"121","desc":"122"},{"messageId":"123","fix":"124","desc":"125"},"no-object-constructor",{"desc":"126","fix":"127"},{"desc":"128","fix":"129"},"removeEscape",{"range":"130","text":"131"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"132","text":"133"},"Replace the `\\` with `\\\\` to include the actual backslash character.","Add dependencies array: [data]",{"range":"134","text":"135"},"Update the dependencies array to be: [id]",{"range":"136","text":"137"},[1260,1261],"",[1260,1260],"\\",[1026,1026],", [data]",[504,506],"[id]"]